struct CooElement {
       row : u32,
       col : u32,
       value : f64
}

fn range(a: int, b: int, body: fn(int, fn() -> !) -> !) -> () {
    if a < b {
        body(a);
        range(a+1, b, body)
    }
}

extern
fn mult_matrix_vector(
	coo: &[CooElement],
   	matrix_rows : i32,
   	matrix_cols : i32,
   	nonzero_count : i32,
   	vector: &mut [f64],
   	vector_size : i32,
   	result : &mut [f64]) -> () {
   
   for i in range(0, matrix_rows) {
       result(i) = .0
   }
   
   for i in range(0, nonzero_count) {
       result(coo(i).row) += vector(coo(i).col) * coo(i).value
   }
}
